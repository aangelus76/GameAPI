#Create a team

custom effect logic for "create [a] team named %string% with min[imum] [player] %integer% max[imum] [player] %integer% for mini game %string%":
	set {_name} to string expression 1
	set {_min} to integer expression 2
	set {_max} to integer expression 3
	set {_namemg} to string expression 4
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		set {_listnodes::*} to yaml nodes "GameAPI.%{_namemg}%.Teams" from "plugins/GameAPI/%{_namemg}%.yml"
		if "%{_listnodes::*}%" is "<none>" or "":
			set {_id} to 0
		else: 
			set {_id} to size of {_listnodes::*}
		set "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Name" to "%{_name}%" in yaml file "plugins/GameAPI/%{_namemg}%.yml"
		set "GameAPI.%{_namemg}%.Teams.Team %{_name}%.ID" to "%{_id}%" in yaml file "plugins/GameAPI/%{_namemg}%.yml"
		set "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Minimum player" to "%{_min}%" in yaml file "plugins/GameAPI/%{_namemg}%.yml"
		set "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Maximum player" to "%{_max}%" in yaml file "plugins/GameAPI/%{_namemg}%.yml"
		set {_details::*} to {_name}, {_min}, {_max} and {_namemg}
		call custom event "team created" to details {_details::*}

#Remove a team

custom effect logic for "remove [the] team named %string% from [the] mini game %string%":
	set {_name} to string expression 1
	set {_namemg} to string expression 2
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		delete yml list "GameAPI.%{_namemg}%.Teams.Team %{_name}%" from file "plugins/GameAPI/%{_namemg}%.yml"
		set {_details::*} to {_name} and {_namemg}
		call custom event "team deleted" to details {_details::*}

#Create a mini game

custom effect logic for "create [a] mini game named %string% with min[imum] [player] %integer% max[imum] [player] %integer%":
	set {_namemg} to string expression 1
	set {_min} to integer expression 2
	set {_max} to integer expression 3
	if file "plugins/GameAPI/%{_namemg}%.yml" doesn't exists:
		create file "plugins/GameAPI/%{_namemg}%.yml"
		set "GameAPI.%{_namemg}%.Minimum player" to "%{_min}%" in yaml file "plugins/GameAPI/%{_namemg}%.yml"
		set "GameAPI.%{_namemg}%.Maximum player" to "%{_max}%" in yaml file "plugins/GameAPI/%{_namemg}%.yml"
		set {_details::*} to {_min}, {_max} and {_namemg}
		call custom event "mini game created" to details {_details::*}

#Remove a mini game

custom effect logic for "remove [the] mini game %string%":
	set {_name} to string expression 1
	set {_namemg} to string expression 2
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		delete file "plugins/GameAPI/%{_namemg}%.yml"
		set {_details::*} to {_name} and {_namemg}
		call custom event "mini game deleted" to details {_details::*}

#Join a team

custom effect logic for "make %player% join [the] team %string% from %string%":
	set {_player} to player expression 1
	set {_name} to string expression 2
	set {_namemg} to string expression 3
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		remove "%{_player}%" from yaml list "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Players" from file "plugins/GameAPI/%{_namemg}%.yml"			
		add "%{_player}%" to yaml list "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Players" from file "plugins/GameAPI/%{_namemg}%.yml"	
		set {_details::*} to {_player}, {_name} and {_namemg}
		call custom event "player joined team" to details {_details::*}		

#Leave a team

custom effect logic for "make %player% leave [the] team %string% from %string%":
	set {_player} to player expression 1
	set {_name} to string expression 2
	set {_namemg} to string expression 3
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		remove "%{_player}%" from yaml list "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Players" from file "plugins/GameAPI/%{_namemg}%.yml"
		set {_details::*} to {_player}, {_name} and {_namemg}
		call custom event "player left team" to details {_details::*}

#Join a mini game

custom effect logic for "make %player% join [the] mini game %string%":
	set {_player} to player expression 1
	set {_namemg} to string expression 2
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		set {_checkmg} to single value "GameAPI.%{_namemg}%.Maximum player" get of "plugins/GameAPI/%{_namemg}%.yml"
		If {_checkmg} is not " " or "<none>":
			remove "%{_player}%" from yaml list "GameAPI.%{_namemg}%.Players" from file "plugins/GameAPI/%{_namemg}%.yml"
			add "%{_player}%" to yaml list "GameAPI.%{_namemg}%.Players" from file "plugins/GameAPI/%{_namemg}%.yml"
			set {_details::*} to {_player} and {_namemg}
			call custom event "player joined mini game" to details {_details::*}

#Leave a mini game

custom effect logic for "make %player% leave [the] mini game %string%":
	set {_player} to player expression 1
	set {_namemg} to string expression 2
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		set {_checkmg} to single value "GameAPI.%{_namemg}%.Maximum player" get of "plugins/GameAPI/%{_namemg}%.yml"
		If {_checkmg} is not " " or "<none>":
			remove "%{_player}%" from yaml list "GameAPI.%{_namemg}%.Players" from file "plugins/GameAPI/%{_namemg}%.yml"
			set {_details::*} to {_player} and {_namemg}
			call custom event "player left mini game" to details {_details::*}

#Random Team

custom expression logic for "random team from %string%":
	set {_namemg} to string expression 1
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		set {_listnodes::*} to yaml nodes "GameAPI.%{_namemg}%.Teams" from "plugins/GameAPI/%{_namemg}%.yml"
		loop {_listnodes::*}:
			replace all "Team " with "" in {_listnodes::*}
			set {_random} to a random element of {_listnodes::*}
		set expression return value to "%{_random}%"

#Add Team Points

custom effect logic for "add %integer% point[s] for [the] team %string% from %string%":
	set {_integer} to integer expression 1
	set {_name} to string expression 2
	set {_namemg} to string expression 3
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		set {_points} to single value "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Points" get of "plugins/GameAPI/%{_namemg}%.yml" parsed as number
		set {_points2} to {_points} + {_integer}
		set "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Points" to "%{_points2}%" in yaml file "plugins/GameAPI/%{_namemg}%.yml"
		set {_details::*} to {_integer}, {_name} and {_namemg}
		call custom event "team won points" to details {_details::*}

#Remove Team Points

custom effect logic for "remove %integer% point[s] from [the] team %string% from %string%":
	set {_integer} to integer expression 1
	set {_name} to string expression 2
	set {_namemg} to string expression 3
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		set {_points} to single value "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Points" get of "plugins/GameAPI/%{_namemg}%.yml" parsed as number
		set {_points2} to {_points} - {_integer}
		set "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Points" to "%{_points2}%" in yaml file "plugins/GameAPI/%{_namemg}%.yml"
		set {_details::*} to {_integer}, {_name} and {_namemg}
		call custom event "team lost points" to details {_details::*}

#Reset Team Points

custom effect logic for "reset point[s] for [the] team %string% from %string%":
	set {_integer} to integer expression 1
	set {_name} to string expression 2
	set {_namemg} to string expression 3
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		set "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Points" to "0" in yaml file "plugins/GameAPI/%{_namemg}%.yml"
		set {_details::*} to {_integer}, {_name} and {_namemg}
		call custom event "team's reset points" to details {_details::*}

#If team has ... points

custom expression logic for "number of points of [the] team %string% from %string% %string% %integer%":
	set {_name} to string expression 1
	set {_namemg} to string expression 2
	set {_operator} to string expression 3
	if "%{_operator}%" is not "=" or "<" or ">" or ">=" or "<=" or "!=":
		set {_operator} to "="
	set {_integer} to integer expression 4
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		set {_points} to single value "GameAPI.%{_namemg}%.Teams.Team %{_number}%.Points" get of "plugins/GameAPI/%{_namemg}%.yml"
		if "%{_operator}%" is "=":
			if {_points} = {_integer}:
				set expression return value to {_integer}
			else:
				set expression return value to false
		if "%{_operator}%" is "<":
			if {_points} < {_integer}:
				set expression return value to {_integer}
			else:
				set expression return value to false
		if "%{_operator}%" is ">":
			if {_points} > {_integer}:
				set expression return value to {_integer}
			else:
				set expression return value to false
		if "%{_operator}%" is ">=":
			if {_points} >= {_integer}:
				set expression return value to {_integer}
			else:
				set expression return value to false
		if "%{_operator}%" is "<=":
			if {_points} <= {_integer}:
				set expression return value to {_integer}
			else:
				set expression return value to false
		if "%{_operator}%" is "!=":
			if {_points} != {_integer}:
				set expression return value to {_integer}
			else:
				set expression return value to false


#If player is in team

custom expression logic for "[the] team of %player% from [the mini game] %string%":
	set {_player} to player expression 1
	set {_namemg} to string expression 2
	set {_name} to string expression 3
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		set {_listnodes::*} to yaml nodes "GameAPI.%{_namemg}%.Teams" from "plugins/GameAPI/%{_namemg}%.yml"
		loop {_listnodes::*}:
			set {_listplayer::*} to value list "GameAPI.%{_namemg}%.Teams.Team %loop-value%.Players" get of "plugins/GameAPI/%{_namemg}%.yml"
			If {_listplayer::*} contains "%{_player}%":
				set expression return value to "%loop-value%"

#If player is in mini game

custom expression logic for "[the] mini game of %player%":
	set {_player} to player expression 1
	set {_namemg} to string expression 2
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		set {_listplayer::*} to value list "GameAPI.%{_namemg}%.Players" get of "plugins/GameAPI/%{_namemg}%.yml"
		If {_listplayer::*} contains "%{_player}%":
			set expression return value to "%{_namemg}%"
		else:
			set expression return value to false


#Loop player in team

custom expression logic for "all players from team %string% of %string%":
	set {_name} to string expression 1
	set {_namemg} to string expression 2
	if file "plugins/GameAPI/%{_namemg}%.yml" exists:
		set {_listplayers::*} to value list "GameAPI.%{_namemg}%.Teams.Team %{_name}%.Players" get of "plugins/GameAPI/%{_namemg}%.yml"
		set expression return value to "%{_listplayers::*}%"
